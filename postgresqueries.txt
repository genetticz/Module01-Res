1. How can you produce a list of the start times for bookings by members named 'David Farrell'?

select starttime from cd.bookings inner join cd.members using(memid) where firstname = 'David' and surname = 'Farrell';

2. How can you produce a list of the start times for bookings for tennis courts, for the date '2012-09-21'? Return a list of start time and facility name pairings, ordered by the time.

select starttime, name from cd.bookings natural join cd.facilities where cast(starttime as varchar) like '2012-09-21%' and name like 'Tennis%' order by starttime

3. How can you output a list of all members who have recommended another member? Ensure that there are no duplicates in the list, and that results are ordered by (surname, firstname).

select distinct t0.firstname, t0.surname from cd.members t0 inner join cd.members t1 on t0.memid = t1.recommendedby where t0.memid = t1.recommendedby order by surname, firstname

4. How can you output a list of all members, including the individual who recommended them (if any)? Ensure that results are ordered by (surname, firstname).

select t0.firstname as memfname, t0.surname as memsname, t1.firstname as recfname, t1.surname as recsname from cd.members t0 left join cd.members t1 on t1.memid = t0.recommendedby order by t0.surname, t0.firstname;

5. How can you produce a list of all members who have used a tennis court? Include in your output the name of the court, and the name of the member formatted as a single column. Ensure no duplicate data, and order by the member name.

select distinct concat(firstname,' ',surname) as member, name from cd.members natural join cd.bookings natural join cd.facilities where name like 'Tennis%'

6. How can you produce a list of bookings on the day of 2012-09-14 which will cost the member (or guest) more than $30? Remember that guests have different costs to members (the listed costs are per half-hour 'slot'), and the guest user is always ID 0. Include in your output the name of the facility, the name of the member formatted as a single column, and the cost. Order by descending cost, and do not use any subqueries.

select concat(firstname,' ',surname) as member, name as facility, case when cd.members.memid = 0 then slots * guestcost else slots * membercost end as cost from cd.members natural join cd.bookings  natural join cd.facilities where cast(starttime as varchar) like '2012-09-14%' and ((cd.members.memid = 0 and slots * guestcost > 30) or (cd.members.memid != 0 and slots * membercost > 30)) order by cost desc

7. How can you output a list of all members, including the individual who recommended them (if any), without using any joins? Ensure that there are no duplicates in the list, and that each firstname + surname pairing is formatted as a column and ordered.

select distinct concat(t0.firstname,' ',t0.surname) as member, (select concat(t1.firstname,' ',t1.surname) as recommender from cd.members t1 where t1.memid = t0.recommendedby) from cd.members t0 order by member

8. How can you produce a list of bookings on the day of 2012-09-14 which will cost the member (or guest) more than $30? Remember that guests have different costs to members (the listed costs are per half-hour 'slot'), and the guest user is always ID 0. Include in your output the name of the facility, the name of the member formatted as a single column, and the cost. Order by descending cost.

select member, facility, cost from ( select concat(firstname,' ', surname) as member, name as facility, case when cd.members.memid = 0 then slots * guestcost else slots * membercost end as cost from cd.members natural join cd.bookings natural join cd.facilities where cast(starttime as varchar) like '2012-09-14%') as checkingcost where cost > 30

